{
  "version": 2,
  "cli": {
    "defaultCollection": "@nrwl/react"
  },
  "defaultProject": "wfa-list-of-literature",
  "generators": {
    "@nrwl/react": {
      "application": {
        "style": "css",
        "linter": "eslint",
        "babel": true
      },
      "component": {
        "style": "css"
      },
      "library": {
        "style": "css",
        "linter": "eslint"
      }
    }
  },
  "projects": {
    "react-hooks": {
      "root": "libs/react-hooks",
      "sourceRoot": "libs/react-hooks/src",
      "projectType": "library",
      "targets": {
        "build": {
          "executor": "@nrwl/web:package",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/libs/react-hooks",
            "tsConfig": "libs/react-hooks/tsconfig.lib.json",
            "project": "libs/react-hooks/package.json",
            "entryFile": "libs/react-hooks/src/index.ts",
            "external": ["react", "react-dom"],
            "babelConfig": "@nrwl/react/plugins/bundle-babel",
            "rollupConfig": "@nrwl/react/plugins/bundle-rollup",
            "assets": [
              {
                "glob": "./libs/react-hooks/README.md",
                "input": ".",
                "output": "."
              }
            ]
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/react-hooks/**/*.{ts,tsx,js,jsx}"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/react-hooks"],
          "options": {
            "jestConfig": "libs/react-hooks/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "react-components": {
      "root": "libs/react-components",
      "sourceRoot": "libs/react-components/src",
      "projectType": "library",
      "targets": {
        "build": {
          "executor": "@nrwl/web:package",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/libs/react-components",
            "tsConfig": "libs/react-components/tsconfig.lib.json",
            "project": "libs/react-components/package.json",
            "entryFile": "libs/react-components/src/index.ts",
            "external": ["react", "react-dom"],
            "babelConfig": "@nrwl/react/plugins/bundle-babel",
            "rollupConfig": "@nrwl/react/plugins/bundle-rollup",
            "assets": [
              {
                "glob": "./libs/react-components/README.md",
                "input": ".",
                "output": "."
              }
            ]
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/react-components/**/*.{ts,tsx,js,jsx}"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/react-components"],
          "options": {
            "jestConfig": "libs/react-components/jest.config.js",
            "passWithNoTests": true
          }
        },
        "storybook": {
          "executor": "@nrwl/storybook:storybook",
          "options": {
            "uiFramework": "@storybook/react",
            "port": 4400,
            "config": {
              "configFolder": "libs/react-components/.storybook"
            }
          },
          "configurations": {
            "ci": {
              "quiet": true
            }
          }
        },
        "build-storybook": {
          "executor": "@nrwl/storybook:build",
          "outputs": ["{options.outputPath}"],
          "options": {
            "uiFramework": "@storybook/react",
            "outputPath": "dist/storybook/react-components",
            "config": {
              "configFolder": "libs/react-components/.storybook"
            }
          },
          "configurations": {
            "ci": {
              "quiet": true
            }
          }
        }
      }
    },
    "tailwind-styles": {
      "root": "libs/tailwind-styles",
      "sourceRoot": "libs/tailwind-styles",
      "projectType": "library",
      "targets": {
        "build": {
          "executor": "@nrwl/workspace:run-commands",
          "outputs": [],
          "options": {
            "command": "npx tailwindcss-cli@latest build ./tailwind.css -o styles.css",
            "cwd": "libs/tailwind-styles"
          }
        },
        "build-production": {
          "executor": "@nrwl/workspace:run-commands",
          "outputs": [],
          "options": {
            "command": "NODE_ENV=production npx tailwindcss-cli@latest build ./tailwind.css -o styles.css",
            "cwd": "libs/tailwind-styles"
          }
        }
      }
    },
    "wfa-list-of-literature": {
      "root": "apps/wfa-list-of-literature",
      "sourceRoot": "apps/wfa-list-of-literature/src",
      "projectType": "application",
      "targets": {
        "build": {
          "executor": "@nrwl/web:build",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/wfa-list-of-literature",
            "index": "apps/wfa-list-of-literature/src/index.html",
            "main": "apps/wfa-list-of-literature/src/main.tsx",
            "polyfills": "apps/wfa-list-of-literature/src/polyfills.ts",
            "tsConfig": "apps/wfa-list-of-literature/tsconfig.app.json",
            "assets": [
              "apps/wfa-list-of-literature/src/favicon.ico",
              "apps/wfa-list-of-literature/src/assets"
            ],
            "styles": [],
            "scripts": [],
            "webpackConfig": "@nrwl/react/plugins/webpack"
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/wfa-list-of-literature/src/environments/environment.ts",
                  "with": "apps/wfa-list-of-literature/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                }
              ]
            }
          }
        },
        "serve": {
          "executor": "@nrwl/web:dev-server",
          "options": {
            "buildTarget": "wfa-list-of-literature:build"
          },
          "configurations": {
            "production": {
              "buildTarget": "wfa-list-of-literature:build:production"
            }
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "apps/wfa-list-of-literature/**/*.{ts,tsx,js,jsx}"
            ]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/wfa-list-of-literature"],
          "options": {
            "jestConfig": "apps/wfa-list-of-literature/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "stores-api": {
      "root": "apps/stores-api",
      "sourceRoot": "apps/stores-api/src",
      "projectType": "application",
      "targets": {
        "build": {
          "executor": "@nrwl/node:build",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/stores-api",
            "main": "apps/stores-api/src/main.ts",
            "tsConfig": "apps/stores-api/tsconfig.app.json",
            "assets": ["apps/stores-api/src/assets"]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/stores-api/src/environments/environment.ts",
                  "with": "apps/stores-api/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "executor": "@nrwl/node:execute",
          "options": {
            "buildTarget": "stores-api:build"
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/stores-api/**/*.ts"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/stores-api"],
          "options": {
            "jestConfig": "apps/stores-api/jest.config.js",
            "passWithNoTests": true
          }
        },
        "generate-schema-types": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "yarn graphql-codegen --config apps/stores-api/codegen.yml"
              }
            ]
          }
        }
      }
    },
    "stores": {
      "root": "apps/stores",
      "sourceRoot": "apps/stores/src",
      "projectType": "application",
      "targets": {
        "build": {
          "executor": "@nrwl/web:build",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/stores",
            "index": "apps/stores/src/index.html",
            "main": "apps/stores/src/main.tsx",
            "polyfills": "apps/stores/src/polyfills.ts",
            "tsConfig": "apps/stores/tsconfig.app.json",
            "assets": ["apps/stores/src/favicon.ico", "apps/stores/src/assets"],
            "styles": ["apps/stores/src/styles.css"],
            "scripts": [],
            "webpackConfig": "@nrwl/react/plugins/webpack"
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/stores/src/environments/environment.ts",
                  "with": "apps/stores/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                }
              ]
            }
          }
        },
        "serve": {
          "executor": "@nrwl/web:dev-server",
          "options": {
            "buildTarget": "stores:build"
          },
          "configurations": {
            "production": {
              "buildTarget": "stores:build:production"
            }
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/stores/**/*.{ts,tsx,js,jsx}"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/stores"],
          "options": {
            "jestConfig": "apps/stores/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    }
  }
}
