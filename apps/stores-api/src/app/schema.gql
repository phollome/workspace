directive @deprecated(
  reason: String = "No longer supported"
) on FIELD_DEFINITION | ENUM_VALUE

scalar Date

enum Unit {
  NUMBER @deprecated(reason: "differentiate between 'count' and 'amount'")
  GRAMS
  KILOGRAMS
  MILLILITER
  LITER
  PIECE
}

type StoresItem {
  _id: ID!
  name: String!
  "number of items in stock"
  count: Int
  "amount related to unit"
  amount: Float
  bestBeforeDates: [Date]
  unit: Unit!
  tags: [String]
}

type RemoveStoresItemPayload {
  removed: Boolean!
  totalBefore: Int!
  totalAfter: Int!
  storesItem: StoresItem
}

type UpdateStoresItemPayload {
  updated: Boolean!
  storesItem: StoresItem
}

type Query {
  "total number of stores items"
  totalStoresItems: Int
  "all stores items"
  allStoresItems: [StoresItem] @deprecated(reason: "use getStoresItems")
  "get items (optional with filter)"
  getStoresItems(input: FilterStoresItemsInput): [StoresItem]
}

input AddStoresItemInput {
  name: String!
  count: Int
  amount: Int
  bestBeforeDates: [Date]
  unit: Unit!
  tags: [String]
}

input UpdateStoresItemInput {
  name: String
  count: Int
  amount: Int
  bestBeforeDates: [Date]
  unit: Unit
  tags: [String]
}

input FilterStoresItemsInput {
  filterString: String
}

type Mutation {
  "add stores item"
  addStoresItem(input: AddStoresItemInput): StoresItem
  "update stores item"
  updateStoresItem(
    _id: ID!
    input: UpdateStoresItemInput!
  ): UpdateStoresItemPayload
  "remove stores item"
  removeStoresItem(_id: ID!): RemoveStoresItemPayload
}
